{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/call/call.component.html","webpack:///./src/app/components/call/call.component.ts","webpack:///./src/app/components/grid-pnr/grid-pnr.component.html","webpack:///./src/app/components/grid-pnr/grid-pnr.component.ts","webpack:///./src/app/components/grid-vuelo-proteccion/grid-vuelo-proteccion.component.html","webpack:///./src/app/components/grid-vuelo-proteccion/grid-vuelo-proteccion.component.ts","webpack:///./src/app/components/grid/grid.component.html","webpack:///./src/app/components/grid/grid.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/inbound/inbound.component.html","webpack:///./src/app/components/inbound/inbound.component.ts","webpack:///./src/app/components/iropsvalidations-details/iropsvalidations-details.component.html","webpack:///./src/app/components/iropsvalidations-details/iropsvalidations-details.component.ts","webpack:///./src/app/components/iropsvalidations/iropsvalidations.component.html","webpack:///./src/app/components/iropsvalidations/iropsvalidations.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/outbound/outbound.component.html","webpack:///./src/app/components/outbound/outbound.component.ts","webpack:///./src/app/components/reexpedition/reexpedition.component.html","webpack:///./src/app/components/reexpedition/reexpedition.component.ts","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/shared/message/messages.ts","webpack:///./src/app/components/shared/navbar/navbar.component.html","webpack:///./src/app/components/shared/navbar/navbar.component.ts","webpack:///./src/app/components/site/site.component.html","webpack:///./src/app/components/site/site.component.ts","webpack:///./src/app/guards/auth-guard.ts","webpack:///./src/app/helpers/error-interceptor.ts","webpack:///./src/app/helpers/jwt-helper.ts","webpack:///./src/app/pipe/formato.pipe.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/customer.service.ts","webpack:///./src/app/services/token.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\n  .body-content {\\n    padding-top: 85px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2RkFBNkY7RUFDN0Y7SUFDRSxpQkFBaUI7RUFDbkI7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC8qIE9uIHNtYWxsIHNjcmVlbnMsIHRoZSBuYXYgbWVudSBzcGFucyB0aGUgZnVsbCB3aWR0aCBvZiB0aGUgc2NyZWVuLiBMZWF2ZSBhIHNwYWNlIGZvciBpdC4gKi9cbiAgLmJvZHktY29udGVudCB7XG4gICAgcGFkZGluZy10b3A6IDg1cHg7XG4gIH1cbn1cbiJdfQ== */\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { FormatoPipe } from './pipe/formato.pipe';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgxIntlTelInputModule } from \"ngx-intl-tel-input\"; \r\n\r\n//Rutas\r\nimport { APP_ROUTING } from './app.routes';\r\n\r\n//Servicios\r\nimport { CustomerService } from '../app/services/customer.service';\r\nimport { ApiService } from '../app/services/api.service';\r\nimport { AuthGuard } from './guards/auth-guard';\r\nimport { ErrorInterceptor } from './helpers/error-interceptor';\r\n//import { AuthChildrenGuard } from './guards/auth-children-guard';\r\nimport { TokenService } from '../app/services/token.service';\r\n\r\n//Componentes\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { OutboundComponent } from './components/outbound/outbound.component';\r\nimport { InboundComponent } from './components/inbound/inbound.component';\r\nimport { CallComponent } from './components/call/call.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SiteComponent } from './components/site/site.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { GridComponent } from './components/grid/grid.component';\r\nimport { GridPNRComponent } from './components/grid-pnr/grid-pnr.component';\r\nimport { GridVueloProteccionComponent } from './components/grid-vuelo-proteccion/grid-vuelo-proteccion.component';\r\nimport { ReexpeditionComponent } from './components/reexpedition/reexpedition.component';\r\nimport { IropsvalidationsComponent } from './components/iropsvalidations/iropsvalidations.component';\r\nimport { IropsvalidationsDetailsComponent } from './components/iropsvalidations-details/iropsvalidations-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    OutboundComponent,\r\n    InboundComponent,\r\n    CallComponent,\r\n    LoginComponent,\r\n    SiteComponent,\r\n    SearchComponent,\r\n    GridComponent,\r\n    FormatoPipe,\r\n    GridPNRComponent,\r\n    GridVueloProteccionComponent,\r\n    ReexpeditionComponent,\r\n    IropsvalidationsComponent,\r\n    IropsvalidationsDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    APP_ROUTING,\r\n    BrowserAnimationsModule,\r\n    TableModule,\r\n    CalendarModule,\r\n    TooltipModule,\r\n    ProgressSpinnerModule,\r\n    BsDatepickerModule.forRoot(),\r\n    NgxIntlTelInputModule \r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n  //  AuthChildrenGuard,\r\n    ApiService,\r\n    CustomerService,\r\n    TokenService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { OutboundComponent } from './components/outbound/outbound.component';\r\nimport { InboundComponent } from './components/inbound/inbound.component';\r\nimport { SiteComponent } from './components/site/site.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthGuard } from './guards/auth-guard';\r\n//import { AuthChildrenGuard } from './guards/auth-children-guard';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { ReexpeditionComponent } from './components/reexpedition/reexpedition.component';\r\nimport { IropsvalidationsComponent } from './components/iropsvalidations/iropsvalidations.component';\r\nimport { IropsvalidationsDetailsComponent } from './components/iropsvalidations-details/iropsvalidations-details.component';\r\n\r\nconst APP_ROUTES: Routes = [\r\n  {\r\n    path: 'site', component: SiteComponent, canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: HomeComponent, outlet: 'route1' },\r\n      { path: 'home', component: HomeComponent, outlet: 'route1' },\r\n      { path: 'outbound', component: OutboundComponent, outlet: 'route1' },\r\n      //{ path: 'outbound', component: OutboundComponent, outlet: 'route1', canActivate: [AuthChildrenGuard] },\r\n      { path: 'inbound', component: InboundComponent, outlet: 'route1' },\r\n      { path: 'search', component: SearchComponent, outlet: 'route1' },\r\n      { path: 'reexpedition', component: ReexpeditionComponent, outlet: 'route1' },\r\n      { path: 'iropsvalidations', component: IropsvalidationsComponent, outlet: 'route1' },\r\n      { path: 'iropsvalidationsdetails/:id', component: IropsvalidationsDetailsComponent, outlet: 'route1' },\r\n    ]\r\n  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '**', pathMatch: 'full', redirectTo: 'login' }\r\n];\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\r\n","module.exports = \"<div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <p-progressSpinner *ngIf=\\\"loading\\\" class=\\\"text-center\\\"></p-progressSpinner>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"col-12 animated fadeIn fast\\\" *ngIf=\\\"optionView\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"isPassenger\\\">\\r\\n                <h5 class=\\\"card-header\\\">Información Pasajeros</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <p-table [value]=\\\"objPassengersInfo\\\" sortField=\\\"firstName\\\" sortMode=\\\"single\\\" (onSort)=\\\"onSort()\\\" [paginator]=\\\"true\\\" [rows]=\\\"5\\\" [resizableColumns]=\\\"true\\\">\\r\\n                        <table>\\r\\n                            <ng-template pTemplate=\\\"header\\\">\\r\\n                                <tr>\\r\\n                                    <th pResizableColumn>Tipo Contacto</th>\\r\\n                                    <th pResizableColumn>Contacto</th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\r\\n                                <tr class=\\\"ui-widget-header\\\" *ngIf=\\\"rowGroupMetadata[rowData.firstName].index === rowIndex\\\">\\r\\n                                    <td colspan=\\\"2\\\">\\r\\n                                        <span style=\\\"font-weight:bold\\\">{{rowData.firstName}} {{rowData.lastName}} ({{rowData.travellerType}})</span>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">{{rowData.descriptionCT}}</td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">{{rowData.descriptionC}}</td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </table>\\r\\n                    </p-table>\\r\\n                    <br>\\r\\n                    <form #forma=\\\"ngForm\\\">\\r\\n                        <table class=\\\"table table-striped table-bordered table-sm\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>#</th>\\r\\n                                    <th>Tipo de Contacto</th>\\r\\n                                    <th>Contacto</th>\\r\\n                                    <th>Acción</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let field of contactsArray; let i = index\\\">\\r\\n                                    <th scope=\\\"row\\\" class=\\\"text-center ruteNumber\\\">\\r\\n                                        {{i+1}}\\r\\n                                    </th>\\r\\n                                    <td>\\r\\n                                        <input [(ngModel)]=\\\"field.contactTypeDescription\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.contactTypeDescription}}\\\" readonly />\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <input [(ngModel)]=\\\"field.description\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"{{field.description}}\\\" readonly/>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">\\r\\n                                        <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteFieldValue(i)\\\">Eliminar</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <select class=\\\"form-control\\\" id=\\\"lstContactTypes\\\" [(ngModel)]=\\\"contactTypeId\\\" name=\\\"contactTypeId\\\" [ngClass]=\\\"{'is-invalid': (origin.errors?.required) && origin.touched}\\\" #origin=\\\"ngModel\\\" required (change)=\\\"contactTypeChange($event)\\\">\\r\\n                             <option *ngFor=\\\"let item of listContactTypes\\\" value=\\\"{{item.contactType_Id}}\\\">{{ item.description }}</option>\\r\\n                          </select>\\r\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"origin.errors?.required\\\">\\r\\n                                            El campo es requerido\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        <ngx-intl-tel-input *ngIf=\\\"isPhone\\\"  [(ngModel)]=\\\"contactTypeName\\\" [cssClass]=\\\"'form-control'\\\"  [preferredCountries]=\\\"['co']\\\"  [onlyCountries]=\\\"\\\"  [enableAutoCountrySelect]=\\\"true\\\"  [enablePlaceholder]=\\\"true\\\"  id=\\\"contactTypeName\\\" name=\\\"contactTypeName\\\"\\r\\n                                            #contactName=\\\"ngModel\\\" required></ngx-intl-tel-input>\\r\\n                                        <input type=\\\"email\\\" *ngIf=\\\"!isPhone\\\" [(ngModel)]=\\\"contactTypeName\\\" id=\\\"contactTypeName\\\" name=\\\"contactTypeName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': (contactName.errors?.required) && contactName.touched}\\\" #contactName=\\\"ngModel\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\r\\n                                        />\\r\\n                                        <!-- <div  class=\\\"invalid-feedback\\\" *ngIf=\\\"contactName.errors?.required\\\">\\r\\n                              El campo es requerido\\r\\n                          </div>  -->\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">\\r\\n                                        <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"addFieldValue()\\\">Adicionar</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </form>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <br *ngIf=\\\"isFrequentTraveller\\\" />\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"isFrequentTraveller\\\">\\r\\n                <h5 class=\\\"card-header\\\">Información Viajero Frecuente</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <p-table [columns]=\\\"colsfrequentTraveller\\\" [value]=\\\"objFrequentTravellersInfo\\\" [paginator]=\\\"true\\\" [rows]=\\\"5\\\" [resizableColumns]=\\\"true\\\">\\r\\n                        <table>\\r\\n                            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                <tr>\\r\\n                                    <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\r\\n                                        {{col.header}}\\r\\n                                        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                                <tr>\\r\\n                                    <td *ngFor=\\\"let col of columns\\\" class=\\\"ui-resizable-column\\\">\\r\\n                                        {{rowData[col.field]}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </table>\\r\\n                    </p-table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br *ngIf=\\\"isItinerary\\\" />\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"isItinerary\\\">\\r\\n                <h5 class=\\\"card-header\\\">Itinerario</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <p-table [columns]=\\\"colsitinerariesInfo\\\" [value]=\\\"objItinerariesInfo\\\" [paginator]=\\\"true\\\" [rows]=\\\"5\\\" [resizableColumns]=\\\"true\\\">\\r\\n                        <table>\\r\\n                            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                <tr>\\r\\n                                    <th *ngFor=\\\"let col of columns\\\" pResizableColumn>\\r\\n                                        {{col.header}}\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-rowData>\\r\\n                                <tr [ngClass]=\\\"rowData.statusCode == 'TK' ? 'gridSuccess' : rowData.statusCode == 'UN' ? 'gridDanger' : rowData.isProtected == 'True' ? 'gridDanger' : null\\\">\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{ rowData.flightNumber }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{rowData.departureDate | formato: 'departureDate' }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{rowData.arriveDate | formato:'arriveDate' }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{ rowData.origin }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{ rowData.destination }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n                                        {{ rowData.statusCode }}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"ui-resizable-column\\\">\\r\\n\\r\\n                                        <p-tableCheckbox [value]=\\\"rowData.isProtected\\\"></p-tableCheckbox>\\r\\n                                        {{ rowData.isProtected | formato: 'isProtected' }}\\r\\n                                        <!-- <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" id=\\\"defaultCheck1\\\"> -->\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </table>\\r\\n                    </p-table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br *ngIf=\\\"isSpecialService\\\" />\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"isSpecialService\\\">\\r\\n                <h5 class=\\\"card-header\\\">Servicios Especiales</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <p-table [columns]=\\\"colsspecialServicesInfo\\\" [value]=\\\"objSpecialServicesInfo\\\" [paginator]=\\\"true\\\" [rows]=\\\"5\\\">\\r\\n                        <table>\\r\\n                            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                <tr>\\r\\n                                    <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\r\\n                                        {{col.header}}\\r\\n                                        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n                                    </th>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                                <tr>\\r\\n                                    <td *ngFor=\\\"let col of columns\\\">\\r\\n                                        {{rowData[col.field]}}\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </ng-template>\\r\\n                        </table>\\r\\n                    </p-table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"flagTipificacion\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Tipificación en CRM</h5>\\r\\n                    <div class=\\\"input-group input-group-sm mb-3\\\" pTooltip=\\\"Momento\\\" tooltipPosition=\\\"left\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input type=\\\"checkbox\\\" id=\\\"inputGroup-sizing-sm\\\" aria-label=\\\"Checkbox for following text input\\\" checked disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" [ngModel]=\\\"moment\\\" name=\\\"moment\\\" class=\\\"form-control\\\" aria-label=\\\"Text input with checkbox\\\" aria-describedby=\\\"inputGroup-sizing-sm\\\" disabled>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group input-group-sm mb-3\\\" pTooltip=\\\"Actividad\\\" tooltipPosition=\\\"left\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\" checked disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"activity\\\" name=\\\"activity\\\" aria-label=\\\"Text input with checkbox\\\" aria-describedby=\\\"inputGroup-sizing-sm\\\" disabled>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group input-group-sm mb-3\\\" pTooltip=\\\"Razón\\\" tooltipPosition=\\\"left\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\" checked disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"reason\\\" name=\\\"reason\\\" aria-label=\\\"Text input with checkbox\\\" aria-describedby=\\\"inputGroup-sizing-sm\\\" disabled>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group input-group-sm mb-3\\\" pTooltip=\\\"Detalle Razón\\\" tooltipPosition=\\\"left\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\" checked disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"reasonDetail\\\" name=\\\"reasonDetail\\\" aria-label=\\\"Text input with checkbox\\\" aria-describedby=\\\"inputGroup-sizing-sm\\\" disabled>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group input-group-sm mb-3\\\" pTooltip=\\\"Motivo\\\" tooltipPosition=\\\"left\\\">\\r\\n                        <div class=\\\"input-group-prepend\\\">\\r\\n                            <div class=\\\"input-group-text\\\">\\r\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\" checked disabled>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"motive\\\" name=\\\"motive\\\" aria-label=\\\"Text input with checkbox\\\" aria-describedby=\\\"inputGroup-sizing-sm\\\" disabled>\\r\\n                    </div>\\r\\n                    <h5 class=\\\"card-title\\\">Tipificación de la gestión</h5>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <select class=\\\"form-control\\\" id=\\\"fieldMotive\\\">\\r\\n              <option *ngFor=\\\"let option of optionGestion\\\" value=\\\"{{option.motive_Id}}\\\">{{ option.description }}</option>\\r\\n            </select>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-md btn-block\\\" (click)=\\\"saveReservation()\\\">Guardar</button>\\r\\n                        <!--<button type=\\\"button\\\" class=\\\"btn btn-secondary btn-md btn-block\\\">Borrar</button>-->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { frontReservation, frequentTravellersInfo, passengersInfo, specialServicesInfo, headerInfo, itinerariesInfo, frontRequest, message, tipificacion, motivesInfo, messageChangeStateManagement, messageSaveOutboundReservation, messageSaveInboundReservation } from '../../models/models';\r\nimport swal from 'sweetalert2';\r\nimport { messagesApp } from '../shared/message/messages';\r\nimport { TokenService } from '../../services/token.service';\r\nimport { messageContactTypeModel } from '../../models/message';\r\nimport { ContactType } from '../../models/ContactType';\r\nimport { resources } from '../../../environments/environment'\r\n\r\n@Component({\r\n  selector: 'app-call',\r\n  templateUrl: './call.component.html',\r\n  styles: []\r\n})\r\nexport class CallComponent implements OnInit {\r\n  resources = resources;\r\n\r\n  //Variables publicas\r\n  @Output() emitHeader: EventEmitter<headerInfo> = new EventEmitter<headerInfo>();\r\n  @Input() optionView: boolean = true;\r\n  colsPassengers: any[];\r\n  colsfrequentTraveller: any[];\r\n  colsitinerariesInfo: any[];\r\n  colsspecialServicesInfo: any[];\r\n  objFrontOutboundReserve: frontReservation;\r\n  objPassengersInfo: passengersInfo[] = [];\r\n  objFrequentTravellersInfo: frequentTravellersInfo[] = [];\r\n  objSpecialServicesInfo: specialServicesInfo[] = [];\r\n  objItinerariesInfo: itinerariesInfo[] = [];\r\n  objHeader: headerInfo;\r\n  isPassenger: boolean = true;\r\n  isFrequentTraveller: boolean = true;\r\n  isItinerary: boolean = true;\r\n  isSpecialService: boolean = true;\r\n  moment: string;\r\n  activity: string;\r\n  reason: string;\r\n  reasonDetail: string;\r\n  motive: string;\r\n  optionMenu: string;\r\n  loading: boolean;\r\n  optionGestion: motivesInfo[];\r\n  flagGestion: boolean;\r\n  flagTipificacion: boolean;\r\n  rowGroupMetadata: any;\r\n  localStateManagement_Id: string;\r\n  contactsArray: Array<any> = [];\r\n  newAttribute: any = {};\r\n  contactTypeId: string;\r\n  contactTypeName: any;\r\n  listContactTypes: ContactType;\r\n  isPhone: boolean;\r\n  isProtected:boolean = false;\r\n\r\n  constructor(private http: HttpClient, private apiService: ApiService, private _tokenService: TokenService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //Columnas pasajeros\r\n    this.colsPassengers = [\r\n      { field: 'firstName', header: 'Nombres' },\r\n      { field: 'lastName', header: 'Apellidos' },\r\n      { field: 'travellerType', header: 'Tipo Viajero' },\r\n      { field: 'descriptionCT', header: 'Tipo Contacto' },\r\n      { field: 'descriptionC', header: 'Contacto' }\r\n    ];\r\n\r\n    //Columnas viajero frecuente\r\n    this.colsfrequentTraveller = [\r\n      { field: 'customerID', header: 'Viajero Frecuente' },\r\n      { field: 'customerFirstName', header: 'Nombres' },\r\n      { field: 'customerSurtName', header: 'Apellidos' },\r\n      { field: 'customerLevelName', header: 'Nivel' }\r\n    ];\r\n\r\n    //Columnas itinerario\r\n    this.colsitinerariesInfo = [\r\n      { field: 'flightNumber', header: 'Número Vuelo' },\r\n      { field: 'departureDate', header: 'Fecha Salida' },\r\n      { field: 'arriveDate', header: 'Fecha Llegada' },\r\n      { field: 'origin', header: 'Origen' },\r\n      { field: 'destination', header: 'Destino' },\r\n      { field: 'statusCode', header: 'Estado' },\r\n      { field: 'isProtected', header: 'Protección' }\r\n    ];\r\n\r\n    //Columnas servicios especiales\r\n    this.colsspecialServicesInfo = [\r\n      { field: 'description', header: 'Código' },\r\n      { field: 'value', header: 'Valor' }\r\n    ];\r\n\r\n    //Tipificación\r\n    this.moment = \"Antes del vuelo\";\r\n    this.activity = \"Antes de la llegada del vuelo\";\r\n    this.reason = \"Irregularidad operacional\";\r\n    this.reasonDetail = \"Reubicación en otro vuelo\";\r\n    this.motive = \"Gestión preventiva\";\r\n\r\n    this.isPhone = false;\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.getContactTypes(token.Data.accessToken).subscribe((responseContactTypes: messageContactTypeModel) => {\r\n        this.listContactTypes = responseContactTypes.Data;\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  onSort() {\r\n    this.updateRowGroupMetaData();\r\n  }\r\n\r\n  //Consulta opción Outbound\r\n  getOutbound(stateManagement_Id: any) {\r\n    this.localStateManagement_Id = stateManagement_Id;\r\n    if (stateManagement_Id != null) {\r\n      let body = {\r\n        \"user_Id\": sessionStorage.getItem('user_id'),\r\n        \"stateManagement_Id\": stateManagement_Id,\r\n        \"case_Id\": \"string\",\r\n        \"motive_Id\": \"string\",\r\n        \"pnr\": \"string\"\r\n      };\r\n\r\n      //Cambio de estado \r\n      this.loading = true;\r\n      this._tokenService.token().subscribe(token => {\r\n        if (sessionStorage.getItem('stateManagement').toUpperCase() == 'DISPONIBLE') {\r\n          //Consulta Outbound\r\n          this.apiService.outbound(body, token.Data.accessToken).subscribe((responseOutbound: message) => {\r\n            if (responseOutbound.Data != null) {\r\n              this.flagTipificacion = true;\r\n              this.objFrontOutboundReserve = responseOutbound.Data;\r\n              this.objHeader = this.objFrontOutboundReserve.headerInfo;\r\n              this.objPassengersInfo = this.objFrontOutboundReserve.passengersInfo;\r\n              this.objFrequentTravellersInfo = this.objFrontOutboundReserve.frequentTravellersInfo;\r\n              this.objItinerariesInfo = this.objFrontOutboundReserve.itinerariesInfo;\r\n              this.objSpecialServicesInfo = this.objFrontOutboundReserve.specialServicesInfo;\r\n              this.optionGestion = this.objFrontOutboundReserve.motivesInfo;\r\n              this.updateRowGroupMetaData();\r\n              this.optionView = true;\r\n              this.loading = false;\r\n\r\n              if (this.objPassengersInfo.length == 0) {\r\n                this.isPassenger = false;\r\n              }\r\n              if (this.objFrequentTravellersInfo.length == 0) {\r\n                this.isFrequentTraveller = false;\r\n              }\r\n              if (this.objItinerariesInfo.length == 0) {\r\n                this.isItinerary = false;\r\n              }\r\n              if (this.objSpecialServicesInfo.length == 0) {\r\n                this.isSpecialService = false;\r\n              }\r\n              if (this.objHeader != null) {\r\n                if (this.objHeader.notified == 'False') {\r\n                  this.objHeader.notified = 'No';\r\n                } else {\r\n                  this.objHeader.notified = 'Si';\r\n                }\r\n              }\r\n              this.emitHeader.emit(this.objHeader);\r\n              let params = 'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width = 700, height = 400, top = 50';\r\n              window.open(this.objFrontOutboundReserve.urlCrm, 'Preventiva', params);\r\n            } else {\r\n              this.objHeader = null;\r\n              this.emitHeader.emit(this.objHeader);\r\n              this.optionView = false;\r\n              this.loading = false;\r\n              swal({\r\n                title: 'Aviso!',\r\n                text: responseOutbound.ReturnMessage,\r\n                type: 'warning',\r\n                confirmButtonText: messagesApp.buttonAcept,\r\n                confirmButtonColor: '#dc3545'\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.loading = false;\r\n        }\r\n      },\r\n        err => {\r\n          this.loading = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  //Consulta Inbound por PNR\r\n  get_PNR(pnr: string) {\r\n    let body = {\r\n      \"user_Id\": sessionStorage.getItem('user_id'),\r\n      \"stateManagement_Id\": \"\",\r\n      \"case_Id\": \"string\",\r\n      \"motive_Id\": \"string\",\r\n      \"pnr\": pnr\r\n    };\r\n    //Consulta Inbound\r\n    this.flagTipificacion = false;\r\n    this.loading = true;\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.inbound(body, token.Data.accessToken).subscribe(async (responseInbound: message) => {\r\n        if (responseInbound.Data != null) {\r\n          this.objFrontOutboundReserve = responseInbound.Data;\r\n          this.objHeader = this.objFrontOutboundReserve.headerInfo;\r\n          this.objPassengersInfo = this.objFrontOutboundReserve.passengersInfo;\r\n          this.objFrequentTravellersInfo = this.objFrontOutboundReserve.frequentTravellersInfo;\r\n          this.objItinerariesInfo = this.objFrontOutboundReserve.itinerariesInfo;\r\n          this.objSpecialServicesInfo = this.objFrontOutboundReserve.specialServicesInfo;\r\n          this.optionGestion = this.objFrontOutboundReserve.motivesInfo;\r\n          this.updateRowGroupMetaData();\r\n          this.optionView = true;\r\n          this.loading = false;\r\n          this.flagTipificacion = true;\r\n\r\n          if (this.objPassengersInfo.length == 0) {\r\n            this.isPassenger = false;\r\n          }\r\n          else {\r\n            this.isPassenger = true;\r\n          }\r\n\r\n          if (this.objFrequentTravellersInfo.length == 0) {\r\n            this.isFrequentTraveller = false;\r\n          } else {\r\n            this.isFrequentTraveller = true;\r\n          }\r\n\r\n          if (this.objItinerariesInfo.length == 0) {\r\n            this.isItinerary = false;\r\n          } else {\r\n            this.isItinerary = true;\r\n          }\r\n\r\n          if (this.objSpecialServicesInfo.length == 0) {\r\n            this.isSpecialService = false;\r\n          } else {\r\n            this.isSpecialService = true;\r\n          }\r\n\r\n          if (this.objHeader != null) {\r\n            if (this.objHeader.notified == 'False') {\r\n              this.objHeader.notified = 'No';\r\n            } else {\r\n              this.objHeader.notified = 'Si';\r\n            }\r\n          }\r\n          this.emitHeader.emit(this.objHeader);\r\n          let params = 'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width = 700, height = 400, top = 50';\r\n          window.open(this.objFrontOutboundReserve.urlCrm, 'Preventiva', params);\r\n        } else {\r\n          this.optionView = false;\r\n          this.loading = false;\r\n          this.flagTipificacion = true;\r\n          swal({\r\n            title: 'Error!',\r\n            text: messagesApp.messageReservationNotFound,\r\n            type: 'error',\r\n            confirmButtonText: messagesApp.buttonAcept,\r\n            confirmButtonColor: '#dc3545'\r\n          });\r\n        }\r\n      },\r\n        err => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n      err => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  //Guardar reserva\r\n  saveReservation() {\r\n    swal({\r\n      title: 'Está seguro de guardar los cambios?',\r\n      text: \"\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#dc3545',\r\n      cancelButtonColor: '#6c757d',\r\n      confirmButtonText: 'Aceptar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        let motive: any = document.getElementById('fieldMotive');\r\n        let body = {\r\n          \"user_Id\": sessionStorage.getItem('user_id'),\r\n          \"stateManagement_Id\": \"\",\r\n          \"case_Id\": this.objFrontOutboundReserve.case_Id,\r\n          \"motive_Id\": motive.options[motive.selectedIndex].value,\r\n          \"pnr\": this.objHeader.reservationNumber\r\n        };\r\n        this.loading = true;\r\n\r\n        if (sessionStorage.getItem('module') == 'outbound') {\r\n          //Guarda reserva outbound\r\n          this._tokenService.token().subscribe(token => {\r\n            this.apiService.saveOutboundReservation(body, token.Data.accessToken).subscribe(async (responseSave: messageSaveOutboundReservation) => {\r\n              this.loading = false;\r\n              if (responseSave.IsSuccess) {\r\n                swal({\r\n                  type: 'success',\r\n                  title: 'Enhorabuena...',\r\n                  text: responseSave.Data,\r\n                  confirmButtonText: messagesApp.buttonAcept,\r\n                  confirmButtonColor: '#dc3545'\r\n                });\r\n              } else {\r\n                swal({\r\n                  type: 'error',\r\n                  title: 'Oops...',\r\n                  text: responseSave.Data,\r\n                  confirmButtonText: messagesApp.buttonAcept,\r\n                  confirmButtonColor: '#dc3545'\r\n                });\r\n              }\r\n\r\n              if (responseSave.ReturnMessage.toUpperCase() == 'DISPONIBLE') {\r\n                this.getOutbound(this.localStateManagement_Id);\r\n              } else {\r\n                this.objHeader = null;\r\n                this.emitHeader.emit(this.objHeader);\r\n                this.optionView = false;\r\n              }\r\n            },\r\n              err => {\r\n                this.loading = false;\r\n              });\r\n          },\r\n            err => {\r\n              this.loading = false;\r\n            });\r\n        } else {\r\n          //Guarda reserva inbound\r\n          this._tokenService.token().subscribe(token => {\r\n            this.apiService.saveInboundReservation(body, token.Data.accessToken).subscribe(async (responseSave: messageSaveInboundReservation) => {\r\n              this.loading = false;\r\n              if (responseSave.IsSuccess) {\r\n                swal({\r\n                  type: 'success',\r\n                  title: 'Enhorabuena...',\r\n                  text: responseSave.Data,\r\n                  confirmButtonText: messagesApp.buttonAcept,\r\n                  confirmButtonColor: '#dc3545'\r\n                });\r\n              } else {\r\n                swal({\r\n                  type: 'error',\r\n                  title: 'Oops...',\r\n                  text: responseSave.Data,\r\n                  confirmButtonText: messagesApp.buttonAcept,\r\n                  confirmButtonColor: '#dc3545'\r\n                });\r\n              }\r\n\r\n              this.objHeader = null;\r\n              this.emitHeader.emit(this.objHeader);\r\n              this.optionView = false;\r\n            },\r\n              err => {\r\n                this.loading = false;\r\n              });\r\n          },\r\n            err => {\r\n              this.loading = false;\r\n            });\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  updateRowGroupMetaData() {\r\n    this.rowGroupMetadata = {};\r\n    if (this.objPassengersInfo) {\r\n      for (let i = 0; i < this.objPassengersInfo.length; i++) {\r\n        let rowData = this.objPassengersInfo[i];\r\n        let firstName = rowData.firstName;\r\n        if (i == 0) {\r\n          this.rowGroupMetadata[firstName] = { index: 0, size: 1 };\r\n        }\r\n        else {\r\n          let previousRowData = this.objPassengersInfo[i - 1];\r\n          let previousRowGroup = previousRowData.firstName;\r\n          if (firstName === previousRowGroup)\r\n            this.rowGroupMetadata[firstName].size++;\r\n          else\r\n            this.rowGroupMetadata[firstName] = { index: i, size: 1 };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getValidators(consolidatedReservation_Id: string) {\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.getReservationDetail(consolidatedReservation_Id, sessionStorage.getItem('user_id'), token.Data.accessToken).subscribe(async (responseReservations: message) => {\r\n        if (responseReservations.Data != null) {\r\n          this.objFrontOutboundReserve = responseReservations.Data;\r\n          this.objHeader = this.objFrontOutboundReserve.headerInfo;\r\n          this.objPassengersInfo = this.objFrontOutboundReserve.passengersInfo;\r\n          this.objFrequentTravellersInfo = this.objFrontOutboundReserve.frequentTravellersInfo;\r\n          this.objItinerariesInfo = this.objFrontOutboundReserve.itinerariesInfo;\r\n          this.objSpecialServicesInfo = this.objFrontOutboundReserve.specialServicesInfo;\r\n          this.optionGestion = this.objFrontOutboundReserve.motivesInfo;\r\n          this.updateRowGroupMetaData();\r\n          this.optionView = true;\r\n          this.loading = false;\r\n          this.flagTipificacion = true;\r\n\r\n          console.log(responseReservations.Data);\r\n          \r\n\r\n          if (this.objPassengersInfo.length == 0) {\r\n            this.isPassenger = false;\r\n          }\r\n          else {\r\n            this.isPassenger = true;\r\n          }\r\n\r\n          if (this.objFrequentTravellersInfo.length == 0) {\r\n            this.isFrequentTraveller = false;\r\n          } else {\r\n            this.isFrequentTraveller = true;\r\n          }\r\n\r\n          if (this.objItinerariesInfo.length == 0) {\r\n            this.isItinerary = false;\r\n          } else {\r\n            this.isItinerary = true;\r\n          }\r\n\r\n          if (this.objSpecialServicesInfo.length == 0) {\r\n            this.isSpecialService = false;\r\n          } else {\r\n            this.isSpecialService = true;\r\n          }\r\n\r\n          if (this.objHeader != null) {\r\n            if (this.objHeader.notified == 'False') {\r\n              this.objHeader.notified = 'No';\r\n            } else {\r\n              this.objHeader.notified = 'Si';\r\n            }\r\n          }\r\n          this.emitHeader.emit(this.objHeader);\r\n        } else {\r\n          this.optionView = false;\r\n          this.loading = false;\r\n          this.flagTipificacion = true;\r\n          swal({\r\n            title: 'Error!',\r\n            text: responseReservations.ReturnMessage,\r\n            type: 'error',\r\n            confirmButtonText: messagesApp.buttonAcept,\r\n            confirmButtonColor: '#dc3545'\r\n          });\r\n        }\r\n      },\r\n        err => {\r\n          this.loading = false;\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  // tabla de insert de contactos \r\n\r\n  addFieldValue() {\r\n    let contactType: any = document.getElementById('lstContactTypes');\r\n    let contactName = this.contactTypeName;\r\n    let realcontact: string;\r\n\r\n    if (this.isPhone){\r\n      realcontact = contactName.internationalNumber;\r\n    }else{\r\n      realcontact = contactName;\r\n    }\r\n\r\n    this.newAttribute = {\r\n      \"contactType_Id\": contactType.value,\r\n      \"contactTypeDescription\": contactType.options[contactType.selectedIndex].text,\r\n      \"description\": realcontact,\r\n    };\r\n\r\n    let result = this.contactsArray.filter(filterContacts => filterContacts.contactType_Id == contactType.value &&\r\n      filterContacts.description == contactName)\r\n\r\n    if (result.length === 0) {\r\n      this.contactsArray.push(this.newAttribute);\r\n      this.newAttribute = {};\r\n    } else {\r\n      swal({\r\n        type: 'warning',\r\n        title: 'Oops...',\r\n        text: 'ya existe el contacto',\r\n        showConfirmButton: true,\r\n        confirmButtonText: 'Aceptar',\r\n        confirmButtonColor: '#de0108'\r\n      });\r\n    }\r\n\r\n    this.contactTypeName = null;\r\n    // contactType = \"\";\r\n    // this.contactTypeChange(null);\r\n  }\r\n\r\n  deleteFieldValue(index) {\r\n    this.contactsArray.splice(index, 1);\r\n  }\r\n\r\n  contactTypeChange(event: any) {\r\n    if(event != null){\r\n      if (event.target.value === resources.contactTypePhoneId)\r\n        this.isPhone = true;\r\n      else\r\n        this.isPhone = false;\r\n    }else{\r\n      this.isPhone = false;\r\n    }\r\n    this.contactTypeName = null;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"datos\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [scrollable]=\\\"true\\\">\\r\\n    <table>\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col *ngFor=\\\"let col of columns\\\" style=\\\"width:200px\\\">\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\r\\n            {{col.header}}\\r\\n            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                        ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n        <tr>\\r\\n          <td *ngFor=\\\"let col of columns\\\">\\r\\n            {{rowData[col.field]}}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </table>\\r\\n  </p-table>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { adminFlight } from '../../models/models';\r\n\r\n@Component({\r\n  selector: 'app-grid-pnr',\r\n  templateUrl: './grid-pnr.component.html',\r\n  styles: []\r\n})\r\nexport class GridPNRComponent implements OnInit {\r\n  cols: any[];\r\n\r\n  datos: adminFlight[] = [{\r\n    proteccion: \"prueba 1\",\r\n    vuelo: \"prueba 2\",\r\n    reserva: \"prueba 3\",\r\n    fechaVuelo: \"prueba 4\",\r\n    horaVuelo: \"prueba 5\",\r\n    motivo: \"prueba 6\",\r\n    ruta: \"prueba 7\",\r\n    fechaIdentificacion: \"prueba 8\",\r\n    horaIdentificacion: \"prueba 9\",\r\n    estado: \"prueba 10\",\r\n    procesamiento: \"prueba 11\",\r\n    contactabilidad: \"prueba 12\",\r\n    vueltas: \"prueba 13\",\r\n    medio: \"prueba 14\",\r\n    canal:\"prueba 15\"\r\n  },\r\n    {\r\n      proteccion: \"prueba 1\",\r\n      vuelo: \"prueba 2\",\r\n      reserva: \"prueba 3\",\r\n      fechaVuelo: \"prueba 4\",\r\n      horaVuelo: \"prueba 5\",\r\n      motivo: \"prueba 6\",\r\n      ruta: \"prueba 7\",\r\n      fechaIdentificacion: \"prueba 8\",\r\n      horaIdentificacion: \"prueba 9\",\r\n      estado: \"prueba 10\",\r\n      procesamiento: \"prueba 11\",\r\n      contactabilidad: \"prueba 12\",\r\n      vueltas: \"prueba 13\",\r\n      medio: \"prueba 14\",\r\n      canal: \"prueba 15\"\r\n    }];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.cols = [\r\n      { field: 'proteccion', header: 'Protección' },\r\n      { field: 'vuelo', header: 'Vuelo' },\r\n      { field: 'reserva', header: 'Reserva' },\r\n      { field: 'fechaVuelo', header: 'Fecha de vuelo' },\r\n      { field: 'horaVuelo', header: 'Hora de vuelo' },\r\n      { field: 'motivo', header: 'Motivo de afectación' },\r\n      { field: 'ruta', header: 'Ruta (OD)' },\r\n      { field: 'fechaIdentificacion', header: 'Fecha de identificación en fuente' },\r\n      { field: 'horaIdentificacion', header: 'Hora de identidicación en fuente' },\r\n      { field: 'estado', header: 'Estado de la protección' },\r\n      { field: 'procesamiento', header: 'Procesamiento' },\r\n      { field: 'contactabilidad', header: 'Contactabilidad' },\r\n      { field: 'vueltas', header: 'Vueltas' },\r\n      { field: 'medio', header: 'Medio de notificación' },\r\n      { field: 'canal', header: 'Canal de notificación' }\r\n    ];\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticProteccion\\\">Protección</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticProteccion\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticVuelo\\\">Vuelo</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticVuelo\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticEstado\\\">Estado</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticEstado\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticCanalNotificacion\\\">Canal de notificación</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticCanalNotificacion\\\" readonly>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticCantidadVueltas\\\">Cantidad de vueltas</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticCantidadVueltas\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticHoraFechaCargue\\\">Hora/fecha de cargue</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticHoraFechaCargue\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticHoraFechaNotificación\\\">Hora/fecha de notificación</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticHoraFechaNotificación\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n          <label for=\\\"staticMotivoAfectación\\\">Motivo afectación</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticMotivoAfectación\\\" readonly>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"staticCantidadClientes\\\">Cantidad clientes</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticCantidadClientes\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n          <label for=\\\"staticNombreAsesorNotifico\\\">Nombre de asesor que notifico</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticNombreAsesorNotifico\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"staticSR\\\">SR</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticSR\\\" readonly>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-2\\\">\\r\\n          <label for=\\\"staticFF\\\">FF</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"staticFF\\\" readonly>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-grid-vuelo-proteccion',\n  templateUrl: './grid-vuelo-proteccion.component.html',\n  styles: []\n})\nexport class GridVueloProteccionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n      <p-table #dt [columns]=\\\"cols\\\" [value]=\\\"datos\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n          <div style=\\\"text-align: right\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" pInputText size=\\\"50\\\" placeholder=\\\"Filtro Global\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                   style=\\\"width: auto\\\">\\r\\n          </div>\\r\\n        </ng-template>\\r\\n        <table>\\r\\n          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n            <tr>\\r\\n              <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\r\\n                {{col.header}}\\r\\n                <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                            ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n              </th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                <input *ngSwitchCase=\\\"'name'\\\" class=\\\"form-control form-control-sm\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n                <input *ngSwitchCase=\\\"'username'\\\" class=\\\"form-control form-control-sm\\\" pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n            <tr>\\r\\n              <td *ngFor=\\\"let col of columns\\\">\\r\\n                {{rowData[col.field]}}\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </table>\\r\\n      </p-table>\\r\\n    \\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: []\n})\nexport class GridComponent implements OnInit {\n  datos: Datos[];\n  cols: any[];\n\n  constructor(private http: HttpClient) { }\n\n  \n  ngOnInit() {\n    this.http.get('https://jsonplaceholder.typicode.com/users')\n    .subscribe((data: any[]) =>{ \n      this.datos = data;\n    });\n\n  this.cols = [\n    { field: 'name', header: 'Nombre' },\n    { field: 'username', header: 'Usuario' },\n    { field: 'email', header: 'Correo' },\n    { field: 'phone', header: 'Teléfono' },\n    { field: 'website', header: 'Sitio web' }\n  ];\n  }\n\n}\n\nexport interface Datos {\n  name:string;\n  username:string;\n  email:string;\n  phone:string;\n  website:string;\n  // company:Compania;\n}\n\nexport interface Compania{\n  name:string;\n  catchPhrase:string;\n  bs:string;\n}\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1 class=\\\"display-4\\\">Preventiva App</h1>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card animated fadeIn fast\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <form class=\\\"form-inline\\\" (ngSubmit)=\\\"get_Search()\\\">\\r\\n          <div class=\\\"input-group \\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>PNR a notificar</strong></span>\\r\\n            </div>\\r\\n            <input type=\\\"search\\\" class=\\\"form-control text-uppercase {{isValidPNR}}\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" [(ngModel)]=\\\"pnr\\\" name=\\\"pnr\\\" maxlength=\\\"6\\\" placeholder=\\\"PNR\\\">\\r\\n\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-secondary\\\" id=\\\"btnSearch\\\">Buscar</button>\\r\\n            </div>\\r\\n            <div class=\\\"invalid-feedback\\\">\\r\\n              El campo PNR es requerido\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Motivo afectación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Ya fue notificada?</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"notified\\\" name=\\\"notified\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Fecha Notificación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ notifiedDate | date:'dd/MM/yyyy, h:mm a' }}\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-call (emitHeader)=\\\"getHeader($event)\\\" [optionView]=\\\"false\\\" #paramPNR></app-call>\\r\\n  <br />\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CallComponent } from '../call/call.component';\r\nimport { headerInfo } from '../../models/models';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inbound',\r\n  templateUrl: './inbound.component.html',\r\n  styles: []\r\n})\r\nexport class InboundComponent implements OnInit {\r\n  pnr: string;\r\n  @ViewChild('paramPNR') searchPNR: CallComponent;\r\n\r\n  description: string;\r\n  affectationType: string;\r\n  notified: string;\r\n  notifiedDate: string;\r\n  isValidPNR: string;\r\n  isValidate: boolean;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    sessionStorage.setItem('module', 'inbound');\r\n  }\r\n\r\n  get_Search() {\r\n    this.isValidate = true;\r\n    if (this.pnr == \"\" || this.pnr == undefined) {\r\n      this.isValidPNR = \"is-invalid\";\r\n      this.isValidate = false;\r\n    } else {\r\n      this.isValidPNR = \"\";\r\n    }\r\n\r\n    if (this.isValidate) {\r\n      this.searchPNR.get_PNR(this.pnr);\r\n    }\r\n  }\r\n\r\n  getHeader(header: headerInfo) {\r\n    if (header != null) {\r\n      this.description = header.description;\r\n      this.affectationType = header.affectationType;\r\n      this.notified = header.notified;\r\n      this.notifiedDate = header.notifiedDate;\r\n    } else {\r\n      this.description = '';\r\n      this.affectationType = '';\r\n      this.notified = '';\r\n      this.notifiedDate = '';\r\n      this.pnr = '';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card animated fadeIn fast\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>PNR a notificar</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reservationNumber\\\" name=\\\"reservationNumber\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Tipo de gestión</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"motiveDescription\\\" name=\\\"motiveDescription\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Vuelo afectado</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"flightNumber\\\" name=\\\"flightNumber\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Fecha del vuelo</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{flightDate | date:'dd/MM/yyyy, h:mm a'}}\\\" name=\\\"flightDate\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Motivo afectación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Tipo afectación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"affectationType\\\" name=\\\"affectationType\\\"\\r\\n            aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-call (emitHeader)=\\\"getHeader($event)\\\" [optionView]=\\\"false\\\" #paramValidators></app-call>\\r\\n  <br />\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'; \r\nimport { ViewChild } from '@angular/core';\r\nimport { CallComponent } from '../call/call.component';\r\nimport { headerInfo } from '../../models/header';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-iropsvalidations-details',\r\n  templateUrl: './iropsvalidations-details.component.html',\r\n  styles: []\r\n})\r\nexport class IropsvalidationsDetailsComponent implements OnInit {\r\n  id: string;\r\n  @ViewChild('paramValidators') param: CallComponent;\r\n  reservationNumber: string;\r\n  description: string;\r\n  affectationType: string;\r\n  motiveDescription: string;\r\n  flightNumber: string;\r\n  flightDate: Date;\r\n\r\n  constructor( private activateRoute: ActivatedRoute ) {\r\n   \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.id = this.activateRoute.snapshot.paramMap.get('id');\r\n    this.param.getValidators(this.id);\r\n  }\r\n\r\n  getHeader(header: headerInfo) {\r\n    if (header != null) {\r\n      this.description = header.description;\r\n      this.affectationType = header.affectationType;\r\n      this.reservationNumber = header.reservationNumber;\r\n      this.motiveDescription = header.motiveDescription;\r\n      this.flightNumber = header.flightNumber;\r\n      this.flightDate = header.flightDate;\r\n    } else {\r\n      this.description = '';\r\n      this.affectationType = '';\r\n      this.reservationNumber = '';\r\n      this.motiveDescription = '';\r\n      this.flightNumber = '';\r\n      this.flightDate = null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card animated fadeIn fast\\\">\\r\\n        <div class=\\\"row text-center\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <p-progressSpinner *ngIf=\\\"loading\\\" class=\\\"text-center\\\"></p-progressSpinner>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p-table [columns]=\\\"cols\\\" [value]=\\\"objReservations\\\" [paginator]=\\\"true\\\" [rows]=\\\"15\\\">\\r\\n                <table>\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr class=\\\"text-center\\\">\\r\\n                      <th scope=\\\"col\\\">Número de Reserva</th>\\r\\n                      <th scope=\\\"col\\\">Tipo de Gestión</th>\\r\\n                      <th scope=\\\"col\\\">Usuario Gestionando</th>\\r\\n                      <th scope=\\\"col\\\">Detalle</th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData>\\r\\n                    <tr class=\\\"text-center\\\">\\r\\n                      <td>{{ rowData.reservationNumber }}</td>\\r\\n                      <td>{{ rowData.motiveDescription }}</td>\\r\\n                      <td>{{ rowData.userManagement }}</td>\\r\\n                      <td class=\\\"text-center\\\"><button type=\\\"button\\\" class=\\\"btn btn-danger fas fa-marker\\\" value={{rowData.consolidatedReservation_Id}} (click)=\\\"openReservation(rowData.consolidatedReservation_Id )\\\"></button></td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </table>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { TokenService } from '../../services/token.service';\r\nimport { ValidationListModel } from '../../models/validation-list-model';\r\nimport { messageValidationListModel } from '../../models/message';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-iropsvalidations',\r\n  templateUrl: './iropsvalidations.component.html',\r\n  styles: []\r\n})\r\nexport class IropsvalidationsComponent implements OnInit {\r\n  objReservations: ValidationListModel;\r\n  loading: boolean;\r\n  cols: any[];\r\n\r\n  constructor(private apiService: ApiService, private _tokenService: TokenService, private router: Router ) { \r\n    this.cols = [\r\n      { field: 'reservationNumber', header: 'Numero de reserva' },\r\n      { field: 'userManagement', header: 'Usuario gestionando' },\r\n      { field: 'motiveDescription', header: 'Motivo' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.getListOfReservationsToValidate(token.Data.accessToken).subscribe(async (responseReservations: messageValidationListModel) => {\r\n        this.objReservations = responseReservations.Data;\r\n        console.log(this.objReservations);\r\n        this.loading = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  openReservation(consolidatedReservation_id : string){\r\n    this.router.navigateByUrl('/site/(route1:iropsvalidationsdetails/'+consolidatedReservation_id+')'); \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<form (ngSubmit)=\\\"login()\\\" #forma=\\\"ngForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 mx-auto\\\" style=\\\"margin-top:40px\\\">\\r\\n      <div class=\\\"card bg-light\\\">\\r\\n        <div class=\\\"card-header text-center\\\">\\r\\n          Login\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Site</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"site\\\" *ngIf=\\\"flagSite\\\">\\r\\n              <option *ngFor=\\\"let site of objSite\\\" [value]=\\\"site.site_Id\\\">{{ site.description }}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"user\\\">User Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': (username.errors?.required) && username.touched}\\\" id=\\\"user\\\" placeholder=\\\"User Name\\\" [(ngModel)]=\\\"user\\\" name=\\\"user\\\" required #username=\\\"ngModel\\\">\\r\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"username.errors?.required\\\">\\r\\n              El campo User Name es requerido\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Password</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': (pass.errors?.required) && pass.touched}\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required #pass=\\\"ngModel\\\">\\r\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"pass.errors?.required\\\">\\r\\n              El campo Password es requerido\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"!(forma.valid && flagSite)\\\">Login</button>\\r\\n          <div class=\\\"row text-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <p-progressSpinner *ngIf=\\\"loading\\\" class=\\\"text-center\\\"></p-progressSpinner>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { Router } from '@angular/router';\r\nimport { site } from '../../models/site';\r\nimport { messageSite, messageLogin } from '../../models/message';\r\nimport swal from 'sweetalert2';\r\nimport { messagesApp } from '../shared/message/messages';\r\nimport { TokenService } from '../../services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  password: string;\r\n  objSite: site;\r\n  flagSite: boolean;\r\n  site: string;\r\n  user: string;\r\n  loading: boolean;\r\n\r\n  constructor(private apiService: ApiService, private customer: CustomerService, private router: Router, private _tokenService: TokenService) {\r\n    this.flagSite = false;\r\n    this.loading = true;\r\n    _tokenService.token().subscribe(token => {\r\n      this.apiService.site(token.Data.accessToken).subscribe(async (responseSite: messageSite) => {\r\n        this.loading = false;\r\n        this.flagSite = true;\r\n        this.objSite = responseSite.Data;\r\n      },\r\n        err => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n      err => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  login() {\r\n    let site_id: any = document.getElementById('site');\r\n    let body = {\r\n      \"siteName\": site_id.options[site_id.selectedIndex].text,\r\n      \"userName\": this.user,\r\n      \"password\": this.password\r\n    };\r\n\r\n    this.loading = true;\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.login(body, token.Data.accessToken).subscribe((responseLogin: messageLogin) => {\r\n        this.loading = false;\r\n        if (responseLogin.IsSuccess) {\r\n          this.customer.setView(responseLogin.Data.views);\r\n          this.customer.setToken(responseLogin.Data.user_Id);\r\n          this.customer.setUser(responseLogin.Data.user_Id);\r\n          sessionStorage.setItem('stateManagement_id', responseLogin.Data.stateManagement_Id);\r\n          sessionStorage.setItem('userName', responseLogin.Data.userName);\r\n          sessionStorage.setItem('stateManagement', responseLogin.Data.stateManagement);\r\n          this.router.navigateByUrl('/site');\r\n        } else {\r\n          swal({\r\n            type: 'error',\r\n            title: 'Oops...',\r\n            text: responseLogin.ReturnMessage,\r\n            confirmButtonText: messagesApp.buttonAcept,\r\n            confirmButtonColor: '#ff4444'\r\n          });\r\n        }\r\n      },\r\n        err => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n      err => {\r\n        this.loading = false;\r\n      });\r\n  }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"card animated fadeIn fast\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>PNR a notificar</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reservationNumber\\\" name=\\\"reservationNumber\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Motivo afectación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"input-group \\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\"><strong>Tipo afectación</strong></span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"affectationType\\\" name=\\\"affectationType\\\" aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" disabled>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-call (emitHeader)=\\\"getHeader($event)\\\" [optionView]=\\\"false\\\" #paramMenu></app-call>\\r\\n  <br />\\r\\n</div>\\r\\n\"","import { Component, ViewChild, AfterContentInit, OnInit } from '@angular/core';\r\nimport { CallComponent } from '../call/call.component';\r\nimport { headerInfo, stateManagement, messageStateManagement, messageChangeStateManagement, messageChangeUserStateManagementToDisconect } from '../../models/models';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { TokenService } from '../../services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-outbound',\r\n  templateUrl: './outbound.component.html',\r\n  styles: []\r\n})\r\nexport class OutboundComponent implements OnInit {\r\n  reservationNumber: string;\r\n  description: string;\r\n  affectationType: string;\r\n  @ViewChild('paramMenu') paramOption: CallComponent;\r\n  objState: messageStateManagement;\r\n  loading: boolean;\r\n  state_id: string;\r\n\r\n  constructor(private apiService: ApiService, private _tokenService: TokenService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    sessionStorage.setItem('module', 'outbound');\r\n    this.state_id = sessionStorage.getItem('stateManagement_id');\r\n    this.paramOption.getOutbound(this.state_id);\r\n  }\r\n\r\n  getHeader(header: headerInfo) {\r\n    if (header != null) {\r\n      this.description = header.description;\r\n      this.affectationType = header.affectationType;\r\n      this.reservationNumber = header.reservationNumber;\r\n    } else {\r\n      this.description = '';\r\n      this.affectationType = '';\r\n      this.reservationNumber = '';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-reexpedition',\n  templateUrl: './reexpedition.component.html',\n  styles: []\n})\nexport class ReexpeditionComponent implements OnInit {\n  env = environment;\n\n  constructor() { }\n\n  ngOnInit() {\n      window.location.href = this.env.reexpedicionesUrl + '?uid=' + sessionStorage.getItem('user_id');\n  }\n}\n","module.exports = \"<div class=\\\"card animated fadeIn fast\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form (ngSubmit)=\\\"search()\\\">\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <select class=\\\"form-control\\\" id=\\\"inputGroupSelect04\\\" [(ngModel)]=\\\"opcionBuscar\\\" name=\\\"opcionBuscar\\\" (change)=\\\"getTipoConsulta()\\\">\\r\\n              <option value=\\\"0\\\">Tipo de consulta</option>\\r\\n              <option value=\\\"1\\\">PNR</option>\\r\\n              <option value=\\\"2\\\">Vuelo o Protección</option>\\r\\n            </select>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control text-uppercase {{isValidOpcion}}\\\" aria-describedby=\\\"inputGroup-sizing-default\\\" maxlength=\\\"6\\\" [(ngModel)]=\\\"valorBuscar\\\" name=\\\"valorBuscar\\\" placeholder=\\\"Buscar\\\">\\r\\n            <div class=\\\"invalid-feedback\\\">\\r\\n              El campo es requerido\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\"><strong>Fecha Inicio - Fecha Final</strong></span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   placeholder=\\\"Fecha Inicio - Fecha Final\\\"\\r\\n                   class=\\\"form-control {{isValidDate}}\\\"\\r\\n                   #drp=\\\"bsDaterangepicker\\\"\\r\\n                   [bsConfig]=\\\"bsConfig\\\"\\r\\n                   [(ngModel)]=\\\"dateRangePickerModel\\\"\\r\\n                   name=\\\"dateRangePickerModel\\\"\\r\\n                   bsDaterangepicker>\\r\\n            <div class=\\\"invalid-feedback\\\">\\r\\n              El campo Fecha Inicio - Fecha Fin es requerido\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <button class=\\\"btn btn-secondary btn-block\\\" id=\\\"btnSearch\\\">Buscar</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <app-grid *ngIf=\\\"flagInicial\\\"></app-grid>\\r\\n  <app-grid-pnr *ngIf=\\\"flagPNR\\\"></app-grid-pnr>\\r\\n  <app-grid-vuelo-proteccion *ngIf=\\\"flagVuelo\\\"></app-grid-vuelo-proteccion>\\r\\n  <br />\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { esLocale } from 'ngx-bootstrap/locale';\r\ndefineLocale('es', esLocale);\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: []\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  flagInicial: boolean = true;\r\n  flagPNR: boolean = false;\r\n  flagVuelo: boolean = false;\r\n  colorTheme = 'theme-red';\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  isValidOpcion: string;\r\n  isValidDate: string;\r\n  opcionBuscar: string = '0';\r\n  valorBuscar: string;\r\n  isValidate: boolean;\r\n  dateRangePickerModel: Date[];\r\n\r\n  constructor(private localeService: BsLocaleService) {\r\n    localeService.use('es');\r\n    this.bsConfig = Object.assign({}, { containerClass: this.colorTheme, dateInputFormat: 'DD/MM/YYYY' });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  search() {\r\n    this.isValidate = true;\r\n    if (this.valorBuscar == \"\" || this.valorBuscar == undefined) {\r\n      this.isValidOpcion = \"is-invalid\";\r\n      this.isValidate = false;\r\n    } else {\r\n      this.isValidOpcion = \"\";\r\n    }\r\n\r\n    if (this.dateRangePickerModel == undefined) {\r\n      this.isValidDate = \"is-invalid\";\r\n      this.isValidate = false;\r\n    } else {\r\n      this.isValidDate = \"\";\r\n    }\r\n\r\n    if (this.isValidate) {\r\n      //PNR\r\n      if (this.opcionBuscar == \"1\") {\r\n        this.flagInicial = false;\r\n        this.flagPNR = true;\r\n        this.flagVuelo = false;\r\n      } else if (this.opcionBuscar == \"2\") {\r\n        this.flagInicial = false;\r\n        this.flagPNR = false;\r\n        this.flagVuelo = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  getTipoConsulta() {\r\n    if (this.opcionBuscar == \"0\") {\r\n      this.valorBuscar = \"\";\r\n      this.dateRangePickerModel = undefined;\r\n      this.flagInicial = true;\r\n      this.flagPNR = false;\r\n      this.flagVuelo = false;\r\n    }\r\n  }\r\n}\r\n","export const messagesApp = {\r\n  messageCreateReservation: '¿Desea crear una nueva reserva?',\r\n  messageErrorGeneral: 'Ocurrió un error en el sistema, por favor inténtalo más tarde',\r\n  messageReservationNotFound: 'La reserva no fue encontrada, por favor ingrese una nueva reserva',\r\n  messageUnauthorized: 'Petición no autorizada',\r\n  messageUnavailable:'El sitio no está disponible',\r\n  buttonSave: 'Guardar',\r\n  buttonCancel: 'Cancelar',\r\n  buttonAcept: 'Aceptar'\r\n}; \r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/site', {outlets: {'route1': ['home']}}]\\\">\\r\\n        <img src=\\\"{{env.imgLogo}}\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\"> PREVENTIVA\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\r\\n        aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"flagOutbound\\\">\\r\\n                <a class=\\\"nav-link {{flagMenu}}\\\"\\r\\n                    [routerLink]=\\\"['/site', {outlets: {'route1': ['outbound']}}]\\\"><strong>Outbound</strong></a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"flagInbound\\\">\\r\\n                <a class=\\\"nav-link {{flagMenu}}\\\"\\r\\n                    [routerLink]=\\\"['/site', {outlets: {'route1': ['inbound']}}]\\\"><strong>Inbound</strong></a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"flagIropsValidations\\\">\\r\\n                <a class=\\\"nav-link {{flagMenu}}\\\"\\r\\n                    [routerLink]=\\\"['/site', {outlets: {'route1': ['iropsvalidations']}}]\\\"><strong>Validaciones</strong></a>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"flagReexpeditions\\\">\\r\\n                <a class=\\\"nav-link {{flagMenu}}\\\"\\r\\n                    [routerLink]=\\\"['/site', {outlets: {'route1': ['reexpedition']}}]\\\"><strong>Reexpediciones</strong></a>\\r\\n            </li>\\r\\n            <!-- <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/site', {outlets: {'route1': ['search']}}]\\\"><strong>Administrador</strong></a>\\r\\n            </li> -->\\r\\n            <li class=\\\"nav-item dropdown\\\">\\r\\n                <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    Estado del usuario\\r\\n                </a>\\r\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\" *ngIf=\\\"flagState\\\">\\r\\n            <!-- <option *ngFor=\\\"let st of objState.Data\\\" value=\\\"{{ st.stateManagement_Id }}\\\" [selected]=\\\"st.distributable | formato:st.distributable\\\">{{ st.description }}</option> -->\\r\\n                   <a *ngFor=\\\"let st of objState.Data\\\" class=\\\"dropdown-item\\\" (click)= \\\"changeState(st.stateManagement_Id, st.description )\\\" >{{ st.description }}</a>\\r\\n                </div>\\r\\n            </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link disabled\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">{{labelState}}</a>\\r\\n                      </li>\\r\\n        </ul>\\r\\n        Hola, {{ userName }}\\r\\n        <a class=\\\"nav-link fas fa-power-off\\\" (click)=\\\"Salir()\\\"></a>\\r\\n    </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { CustomerService } from '../../../services/customer.service';\r\nimport swal from 'sweetalert2';\r\nimport { messagesApp } from '../message/messages';\r\nimport { messageStateManagement, messageChangeStateManagement } from '../../../models/models';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { TokenService } from '../../../services/token.service';\r\nimport { messageLogin } from '../../../models/message';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styles: []\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  flagOutbound: boolean;\r\n  flagInbound: boolean;\r\n  flagSearch: boolean;\r\n  flagIropsValidations: boolean;\r\n  flagMenu: string;\r\n  flagState: boolean;\r\n  flagReexpeditions:boolean;\r\n  env = environment;\r\n  userName: string;\r\n  objState: messageStateManagement;\r\n  labelState : string;\r\n  loading: boolean;\r\n\r\n\r\n  constructor(private router: Router, private customer: CustomerService, private apiService: ApiService, private _tokenService: TokenService) {\r\n    this.labelState = sessionStorage.getItem('stateManagement');\r\n    if(this.labelState.toUpperCase() === \"DISPONIBLE\"){\r\n      this.flagMenu = \"\";\r\n    }else{\r\n      this.flagMenu = \"is-disabled\";\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.flagState = false;\r\n    this._tokenService.token().subscribe(token => {\r\n      this.apiService.optionState(token.Data.accessToken).subscribe((responseState: messageStateManagement) => {\r\n        this.objState = responseState;\r\n        this.flagState = true;\r\n      },\r\n        err => {});\r\n    },\r\n      err => {});\r\n\r\n    this.userName = sessionStorage.getItem('userName');\r\n    let views: string[] = this.customer.getViews().split(',');\r\n    this.flagOutbound = false;\r\n    this.flagInbound = false;\r\n    this.flagSearch = false;\r\n    this.flagIropsValidations = false;\r\n    this.flagReexpeditions=false;\r\n\r\n    views.forEach(element => {\r\n      switch (element) {\r\n        case 'outbound':\r\n          this.flagOutbound = true;\r\n          break;\r\n        case 'inbound':\r\n          this.flagInbound = true;\r\n          break;\r\n        // case 'search':\r\n        //   this.flagSearch = true;\r\n        //   break;\r\n        case 'bo irops':\r\n          this.flagReexpeditions = true;\r\n          break;\r\n        case 'irops_validaciones':\r\n          this.flagIropsValidations = true;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  Salir() {\r\n    swal({\r\n      title: 'Desea salir del sistema?',\r\n      text: \"\",\r\n      type: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#dc3545',\r\n      cancelButtonColor: '#6c757d',\r\n      confirmButtonText: messagesApp.buttonAcept\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this._tokenService.token().subscribe(token => {\r\n          let body = {\r\n            \"user_Id\": sessionStorage.getItem('user_id'),\r\n            \"stateManagement_Id\": \"\",\r\n            \"case_Id\": \"string\",\r\n            \"motive_Id\": \"string\",\r\n            \"pnr\": \"string\"\r\n          };\r\n\r\n          this.apiService.logout(body, token.Data.accessToken).subscribe(async (responseChange: messageLogin) => {\r\n            if (responseChange.IsSuccess) {\r\n              sessionStorage.clear();\r\n              this.router.navigateByUrl('/login');\r\n            }\r\n          })\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  changeState(statemanagement_id: string, description: string) {\r\n    let localstatemanagement = sessionStorage.getItem('stateManagement_id') \r\n    if(statemanagement_id != localstatemanagement){\r\n      sessionStorage.setItem('stateManagement_id', statemanagement_id);\r\n      sessionStorage.setItem('stateManagement', description);\r\n      this.labelState = description;\r\n\r\n      if(this.labelState.toUpperCase() === \"DISPONIBLE\"){\r\n        this.flagMenu = \"\";\r\n      }else{\r\n        this.flagMenu = \"is-disabled\";\r\n      }\r\n\r\n\r\n      let body = {\r\n        \"user_Id\": sessionStorage.getItem('user_id'),\r\n        \"stateManagement_Id\": statemanagement_id,\r\n        \"case_Id\": \"string\",\r\n        \"motive_Id\": \"string\",\r\n        \"pnr\": \"string\"\r\n      };\r\n\r\n      //Cambio de estado \r\n      this.loading = true;\r\n      this._tokenService.token().subscribe(token => {\r\n        this.apiService.changeStateManagement(body, token.Data.accessToken).subscribe(async (responseChange: messageChangeStateManagement) => {\r\n          if (responseChange.IsSuccess) {\r\n            this.loading = false;\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<div class=\\\"col-12\\\">\\r\\n  <app-navbar></app-navbar>\\r\\n</div>\\r\\n<div class=\\\"col-12 main-container\\\">\\r\\n  <router-outlet name=\\\"route1\\\"></router-outlet>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-site',\n  templateUrl: './site.component.html',\n  styles: []\n})\nexport class SiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { CustomerService } from '../services/customer.service';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router/src/router_state';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private customerService: CustomerService, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const redirectUrl = route['_routerState']['url'];\r\n\r\n    if (this.customerService.isLogged()) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigateByUrl(this.router.createUrlTree(['/login'], { queryParams: { redirectUrl } }));\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport swal from 'sweetalert2';\r\nimport { messagesApp } from '../components/shared/message/messages';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request)\r\n      .pipe(\r\n        tap(event => {\r\n          if (event instanceof HttpResponse) {\r\n          }\r\n        }, error => {\r\n          // http response status code\r\n          //console.log(\"----response----\");\r\n          //console.error(error);\r\n          //console.error(\"status code:\");\r\n          //console.error(error.status);\r\n          //console.error(error.message);\r\n          //console.log(\"--- end of response---\");\r\n          if (error.status === 500 || error.status === 0) {\r\n            swal({\r\n              type: 'error',\r\n              title: 'Oops...',\r\n              text: messagesApp.messageErrorGeneral,\r\n              confirmButtonText: messagesApp.buttonAcept,\r\n              confirmButtonColor: '#dc3545'\r\n            });\r\n          }\r\n          if (error.status === 401) {\r\n            swal({\r\n              type: 'error',\r\n              title: 'Oops...',\r\n              text: messagesApp.messageUnauthorized,\r\n              confirmButtonText: messagesApp.buttonAcept,\r\n              confirmButtonColor: '#dc3545'\r\n            });\r\n          }\r\n\r\n          if (error.status === 403) {\r\n            swal({\r\n              type: 'error',\r\n              title: 'Oops...',\r\n              text: messagesApp.messageUnavailable,\r\n              confirmButtonText: messagesApp.buttonAcept,\r\n              confirmButtonColor: '#dc3545'\r\n            });\r\n          }\r\n        })\r\n      )\r\n  }\r\n}\r\n","import { Iuser } from \"../models/iuser\";\r\n\r\nexport class JwtHelper {\r\n\r\n  public urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: {\r\n        break;\r\n      }\r\n      case 2: {\r\n        output += '==';\r\n        break;\r\n      }\r\n      case 3: {\r\n        output += '=';\r\n        break;\r\n      }\r\n      default: {\r\n        throw 'Illegal base64url string!';\r\n      }\r\n    }\r\n    return this.b64DecodeUnicode(output);\r\n  }\r\n\r\n  // credits for decoder goes to https://github.com/atk\r\n  private b64decode(str: string): string {\r\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let output: string = '';\r\n\r\n    str = String(str).replace(/=+$/, '');\r\n\r\n    if (str.length % 4 == 1) {\r\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n    }\r\n\r\n    for (\r\n      // initialize result and counters\r\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\r\n      // get next character\r\n      buffer = str.charAt(idx++);\r\n      // character found in table? initialize bit storage and add its ascii value;\r\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\r\n        // and if not first of each 4 characters,\r\n        // convert the first 8 bits to one ascii character\r\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\r\n    ) {\r\n      // try to find character in table (0-63, not found => -1)\r\n      buffer = chars.indexOf(buffer);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\n  private b64DecodeUnicode(str: any) {\r\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n  }\r\n\r\n  /**\r\n   * this is used to decode our token if passed or pick it from the local storage\r\n   * @param token\r\n   */\r\n  public decodeToken(token?: string): Iuser {\r\n\r\n    if (token == null) {\r\n      token = localStorage.getItem('accessToken');\r\n    }\r\n\r\n    /**\r\n     * if it is still null, we return null since no token yet\r\n     */\r\n    if (token == null) {\r\n      return null;\r\n    }\r\n\r\n    let parts = token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new Error('JWT must have 3 parts');\r\n    }\r\n\r\n    let decoded = this.urlBase64Decode(parts[1]);\r\n    if (!decoded) {\r\n      throw new Error('Cannot decode the token');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public getTokenExpirationDate(token?: string): Date {\r\n\r\n    if (token == null) {\r\n      token = localStorage.getItem('accessToken');\r\n    }\r\n\r\n    let decoded: any;\r\n    decoded = this.decodeToken(token);\r\n\r\n    if (!decoded.hasOwnProperty('exp')) {\r\n      return null;\r\n    }\r\n\r\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return date;\r\n  }\r\n\r\n  public isTokenExpired(token?: string, offsetSeconds?: number): boolean {\r\n    if (token == null) {\r\n      token = localStorage.getItem('accessToken');\r\n    }\r\n\r\n    let date = this.getTokenExpirationDate(token);\r\n    offsetSeconds = offsetSeconds || 0;\r\n\r\n    if (date == null) {\r\n      return false;\r\n    }\r\n\r\n    // Token expired?\r\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe, getLocaleDateFormat, FormatWidth, formatDate } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'formato'\r\n})\r\nexport class FormatoPipe implements PipeTransform {\r\n  transform(value: string, arg?): string {\r\n    switch (arg) {\r\n      case 'isProtected':\r\n        if (value == 'True') {\r\n          value = 'Si';\r\n        } else {\r\n          value = 'No';\r\n        }\r\n        break;\r\n      case 'departureDate':\r\n      case 'arriveDate':\r\n        value = formatDate(value, 'dd/MM/yyyy, h:mm a', 'en-US');\r\n        break;\r\n      case 0:\r\n        value = 'true';\r\n        break;\r\n      case 1:\r\n      case 2:\r\n        value = 'false';\r\n        break;\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginResultModel, message, tipificacion, motivesInfo, stateManagement, messageStateManagement, messageChangeStateManagement, messageSaveOutboundReservation, messageSaveInboundReservation, messageChangeUserStateManagementToDisconect, frontLoginRequest } from '../models/models';\r\nimport { environment } from '../../environments/environment'\r\nimport { messageSite, messageLogin, messageToken, messageValidationListModel, messageContactTypeModel } from '../models/message';\r\nimport { TokenHelper } from '../helpers/token-helper';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  env = environment;\r\n  headers: HttpHeaders;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  login(body: any, token: string): Observable<messageLogin> {\r\n    return this.http.post<messageLogin>(this.env.preventivaUrl + 'api/Users/Login', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  logout(body: any, token: string): Observable<messageLogin> {\r\n    return this.http.post<messageLogin>(this.env.preventivaUrl + 'api/Users/logout', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n\r\n  outbound(body: any, token: string): Observable<message> {\r\n    return this.http.post<message>(this.env.preventivaUrl + 'api/OutBound/GetOutBoundReservation', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  inbound(body: any, token: string): Observable<message> {\r\n    return this.http.post<message>(this.env.preventivaUrl + 'api/InBound/GetInBoundReservation', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  optionState(token: string): Observable<messageStateManagement> {\r\n    return this.http.get<messageStateManagement>(this.env.preventivaUrl + 'api/StateManagements/GetStatesManagements', { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  changeStateManagement(body: any, token: string): Observable<messageChangeStateManagement> {\r\n    return this.http.post<messageChangeStateManagement>(this.env.preventivaUrl + 'api/StateManagements/ChangeStateManagement', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  saveOutboundReservation(body: any, token: string): Observable<messageSaveOutboundReservation> {\r\n    return this.http.post<messageSaveOutboundReservation>(this.env.preventivaUrl + '/api/OutBound/SaveOutBoundReservation', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  saveInboundReservation(body: any, token: string): Observable<messageSaveInboundReservation> {\r\n    return this.http.post<messageSaveInboundReservation>(this.env.preventivaUrl + '/api/InBound/SaveInBoundReservation', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  changeUserStateManagementToDisconect(body: any, token: string): Observable<messageChangeUserStateManagementToDisconect> {\r\n    return this.http.post<messageChangeUserStateManagementToDisconect>(this.env.preventivaUrl + 'api/StateManagements/ChangeUserStateManagementToDisconect ', body, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  site(token: string): Observable<messageSite> {\r\n    return this.http.get<messageSite>(this.env.preventivaUrl + 'api/Sites/GetSites', { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token)});\r\n  }\r\n\r\n  getListOfReservationsToValidate(token: string): Observable<messageValidationListModel> {\r\n    return this.http.get<messageValidationListModel>(this.env.preventivaUrl + 'api/IropsValidations/getlistofreservations', { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  getReservationDetail(id: string, user_id: string,  token: string): Observable<message> {\r\n    return this.http.get<message>(this.env.preventivaUrl + 'api/IropsValidations/getReservationDetails?consolidatedReservation_Id=' + id + '&user_id=' + user_id, { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n\r\n  \r\n  getContactTypes(token: string): Observable<messageContactTypeModel> {\r\n    return this.http.get<messageContactTypeModel>(this.env.preventivaUrl + 'api/ContactTypes/getlistofcontactTypes', { headers: new HttpHeaders().set('Authorization', 'Bearer ' + token) });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelper } from \"../helpers/jwt-helper\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nconst TOKEN = 'accessToken';\r\nconst USER_ID = 'user_id';\r\nconst VIEW = 'views';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n  private _jwt: JwtHelper = new JwtHelper();\r\n  private redirectUrl: string;\r\n  public message: string;\r\n\r\n  constructor() { }\r\n\r\n  setToken(token: string): void {\r\n    sessionStorage.setItem(TOKEN, token);\r\n  }\r\n\r\n  setUser(user_id: string): void {\r\n    sessionStorage.setItem(USER_ID, user_id);\r\n  }\r\n\r\n  getUser(): string {\r\n    return sessionStorage.getItem(USER_ID);\r\n  }\r\n\r\n  setView(views: string[]): void {\r\n    sessionStorage.setItem(VIEW, views.toString());\r\n  }\r\n\r\n  getViews(): string {\r\n    return sessionStorage.getItem(VIEW);\r\n  }\r\n\r\n  isLogged() {\r\n    return sessionStorage.getItem(TOKEN) != null;\r\n  }\r\n\r\n  /**\r\n   * check for expiration and if token is still existing or not\r\n   * @return {boolean}\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return localStorage.getItem(TOKEN) != null && !this._jwt.isTokenExpired();\r\n  }\r\n\r\n  setRedirectUrl(url: string): void {\r\n    this.redirectUrl = url;\r\n  }\r\n\r\n  getRedirectUrl(): string {\r\n    return this.redirectUrl;\r\n  }\r\n\r\n  /**\r\n   * this is used to clear anything that needs to be removed\r\n   */\r\n  clear(): void {\r\n    localStorage.clear();\r\n  }\r\n\r\n  /**\r\n   * this returns the token for the user\r\n   * @param email\r\n   * @param password\r\n   */\r\n  authenticate(email: string, password: string): Observable<string> {\r\n    //return this._apiHandler.callService(\"/user/login\", RequestMethod.Post, { email: email, password: password })\r\n    //  .map(res => <string>res.text())\r\n    //  .do((token: string) => {\r\n    //    localStorage.setItem('token', token);\r\n    //    this._userService.set(this._jwt.decodeToken());\r\n    //  });\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * this is used to alert our caller if we should go get token for next request or\r\n   * to be carried out request\r\n   *\r\n   * @param threshold_seconds  is like a threshold to check if we should or not check for token\r\n   * default we use 2min before the token expires\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  shouldIGetToken(threshold_seconds: number = 120): boolean {\r\n    let expDate = this._jwt.getTokenExpirationDate().valueOf() - (threshold_seconds * 1000);\r\n\r\n    return new Date().valueOf() > expDate;\r\n  }\r\n\r\n  /**\r\n   * this is used to retrieve a newer token since the current one is going to expire soon\r\n   *\r\n   */\r\n  retrieveToken(): Observable<string> {\r\n    //return this._apiHandler.callService(\"/user/token\", RequestMethod.Get)\r\n    //  .map(res => <string>res.text())\r\n    //  .do((token: string) => {\r\n    //    this.clear();\r\n    //    localStorage.setItem('token', token);\r\n    //    this._userService.set(this._jwt.decodeToken());\r\n    //  });\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { messageToken } from '../models/message';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n  env = environment;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  token(): Observable<messageToken> {\r\n    const headers = new HttpHeaders({\r\n      'Clientid': '76fbb33b-a2ab-4967-a072-c29828f114f6',\r\n      'Secretkey': 'df3b8844-8744-4b9e-8eb6-68869f2890f2'\r\n    })\r\n    return this.http.post<messageToken>(this.env.preventivaUrl + 'token', {}, { headers });\r\n  }\r\n}\r\n\r\n","\r\nexport const environment = {\r\n  production: false,\r\n  preventivaUrl: \" https://app-preventive-v1-dev-crd-hd.azurewebsites.net/apipreventive/\", // Url del backend de preventiva\r\n  imgLogo: \"../assets/img/Avianca-Logo.png\",\r\n  reexpedicionesUrl:\"http://localhost:4201/reissues/\" // Url del front end de reexpediciones\r\n};\r\n\r\nexport const resources = {\r\n  contactTypePhoneId: \"02FA564D-2513-4D91-A8F8-2F58B95ADCF2\"\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}